<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMC0AAAEAIABQIwAAFgAAACgAAAAwAAAAWgAAAAEAIAAAAAAAAAAAABguAAAYLgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvLv0JKOm6zwAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAg+VgDADh3wAA
        5t9aWNOH2tnyBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAt7vjKD8q
        zrUAAObfAADi/wMA5f8AAOf/KAfO2ZmS3E4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADj2ssUmG1HmW4hAN+GKAD/nUIA/5xHAP+aRwD/mkUA/443AP96IAD/kT0M08mm
        hVoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMuwpziAQSG/byMA349AAP+mSgD/gS0A/2Yg
        AN+mcV+B9ebcBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqohhfHot
        AN54FgDflFInucy/tioAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAANDCqiSxlH5MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD///////8AAP///P///wAA///4P///AAD//+Af//8AAP//wAf//wAA//8AA///AAD//gAD//8AAP+c
        BAP/fwAA/x4HA/8fAAD8HgeD/w8AAPgeB+P/AwAA8B4H8/8DAADwHgf8/wMAAPAeB/x/AwAA8B4H/B8D
        AADwHgf8DwMAAPAeA/wDAwAA8B4A/AEDAADwHgB8AAMAAPAeABwAAwAA8AYADAADAADwAAAAAAMAAPAA
        AAAAAwAA8AAEAAgDAADwAAYADgMAAPAAB4APAwAA8AAHwA8DAADwEAfwDwMAAPAcB/wPAwAA8B8H/A8D
        AADwH4f8DwMAAPAf5/wPAwAA8B/z/A8DAADwH/H8DwMAAPAf8HwPAwAA/B/wHA8HAAD/H/AMDx8AAP+f
        8AAPPwAA///wAB//AAD///gAf/8AAP///gD//wAA////g///AAD////P//8AAP///////wAA////////
        AAA=
</value>
  </data>
</root>